module vga_verilog_test(
	input CLK,
	output RED,
	output GREEN,
	output BLUE,
	output V_SYNC,
	output H_SYNC,
	
	output reg [15:0] D_SDRAM,
	output reg [11:0] A_SDRAM,
	output reg [1:0] B_SDRAM,
	output CKE_SDRAM, CSn_SDRAM, WEn_SDRAM, CASn_SDRAM, RASn_SDRAM,
	output CLK_SDRAM,
	output LDQM_SDRAM, UDQM_SDRAM
	
};

assign SDRAM_CKE = 1'b1;
assign CLK_SDRAM = CLK;
localparam [3:0] SDRAM_CMD_LOADMODE  = 4'b0000;
localparam [3:0] SDRAM_CMD_REFRESH   = 4'b0001;
localparam [3:0] SDRAM_CMD_PRECHARGE = 4'b0010;
localparam [3:0] SDRAM_CMD_ACTIVE    = 4'b0011;
localparam [3:0] SDRAM_CMD_WRITE     = 4'b0100;
localparam [3:0] SDRAM_CMD_READ      = 4'b0101;
localparam [3:0] SDRAM_CMD_NOP       = 4'b1111;

reg [3:0] SDRAM_CMD = SDRAM_CMD_NOP;
assign {CSn_SDRAM, RASn_SDRAM, CASn_SDRAM, WEn_SDRAM} = SDRAM_CMD;



reg [3:0] state=0;
reg [10:0] x=0;
reg [9:0] y=0;
reg [13:0] timer=0;

wire [10:0] x_2=x + 2;

always @(posedge clk)
case(state)
	4'h0:begin
		SDRAM_CMD <= SDRAM_CMD_NOP;
		if(timer <= 10000) begin
			timer <= timer + 1;
		end else begin
			timer <= 0
			state <= 4'h1;
		end
	
	4'h1:begin
	
	end
	
	4'h2:begin
	
	end
	
	4'h3:begin
	
	end
	
	4'h4:begin
	
	end
	
	4'h5:begin
	
	end
	
	4'h6:begin
	
	end
	
	4'h7:begin
	
	end
	
	4'h8:begin
	
	end
	
	4'h9:begin
	
	end
	
	4'ha:begin
	
	end
endcase